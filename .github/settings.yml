# https://github.com/repository-settings/app

# https://docs.github.com/en/rest/reference/repos#update-a-repository
repository:
  # The name of the repository. Changing this will rename the repository.
  # name: repo-name

  # A short description of the repository that will show up on GitHub.
  # description: description of repo

  # A URL with more information about the repository.
  # homepage: https://example.github.io

  # A comma-separated list of topics to set on the repository.
  # topics: github, probot

  # Either `true` to make the repository private, or `false` to make it public.
  # private: false

  # Either `true` to enable issues for this repository, `false` to disable them.
  has_issues: true

  # Either `true` to enable projects for this repository, or `false` to disable them.
  # If projects are disabled for the organization, passing `true` will cause an API error.
  has_projects: true

  # Either `true` to enable the wiki for this repository, `false` to disable it.
  has_wiki: true

  # Either `true` to enable downloads for this repository, `false` to disable them.
  has_downloads: true

  # Updates the default branch for this repository.
  default_branch: main

  # Either `true` to allow merging pull requests with a merge commit, or `false` to prevent merging pull requests with merge commits.
  allow_merge_commit: true

  # Either `true` to allow squash-merging pull requests, or `false` to prevent squash-merging.
  allow_squash_merge: false

  # Either `true` to allow rebase-merging pull requests, or `false` to prevent rebase-merging.
  allow_rebase_merge: false

  # Either `true` to allow auto-merge on pull requests, or `false` to disallow auto-merge.
  allow_auto_merge: true

  # Either `true` to enable automatic deletion of branches on merge, or `false` to disable.
  delete_branch_on_merge: true

  # Either `true` to enable automated security fixes, or `false` to disable automated security fixes.
  enable_automated_security_fixes: true

  # Either `true` to enable vulnerability alerts, or `false` to disable vulnerability alerts.
  enable_vulnerability_alerts: true

# https://docs.github.com/en/rest/reference/branches
branches:
  - name: main
    # https://docs.github.com/en/rest/reference/branches#update-branch-protection
    # Branch Protection settings. Set to `null` to disable.
    protection:
      # Required. Require status checks to pass before merging. Set to `null` to disable.
      required_status_checks:
        # Required. Require branches to be up to date before merging.
        strict: true
        # Required. Deprecated: The list of status checks to require in order to merge into this branch.
        # If any of these checks have recently been set by a particular GitHub App, they will be required to come from that app in future for the branch to merge.
        # Use checks instead of contexts for more fine-grained control.
        contexts: []
        # The list of status checks to require in order to merge into this branch.
        # checks:
        #   - # Required. The name of the required check.
        #     context: check-name
        #     # The ID of the GitHub App that must provide this check. Omit this field to automatically select the GitHub App that has recently provided this check, or any app if it was not set by a GitHub App.
        #     # Pass -1 to explicitly allow any app to set the status.
        #     app_id: -1
      # Required. Require at least one approving review on a pull request, before merging. Set to `null` to disable.
      required_pull_request_reviews:
        # Specify the number of reviewers required to approve pull requests. Use a number between 1 and 6 or 0 to not require reviewers.
        required_approving_review_count: 1
        # Blocks merging pull requests until [code owners](https://help.github.com/articles/about-code-owners/) review them.
        require_code_owner_reviews: true
        # Dismiss approved reviews automatically when a new commit is pushed.
        dismiss_stale_reviews: true
        # Specify which users and teams can dismiss pull request reviews. Pass an empty dismissal_restrictions object to disable.
        # User and team dismissal_restrictions are only available for organization-owned repositories. Omit this parameter for personal repositories.
        # dismissal_restrictions:
        #   # The list of user logins with dismissal access.
        #   users: []
        #   # The list of team slugs with dismissal access.
        #   teams: []
        # Allow specific users or teams to bypass pull request requirements. Set to `null` to disable.
        # bypass_pull_request_allowances:
        #   # The list of user logins allowed to bypass pull request requirements.
        #   users: []
        #   # The list of team slugs allowed to bypass pull request requirements.
        #   teams: []
      # Required. Restrict who can push to the protected branch. User, app, and team restrictions are only available for organization-owned repositories. Set to `null` to disable.
      restrictions: null
        # # Required. The list of user logins with push access.
        # users: []
        # # Required. The list of team slugs with push access.
        # teams: []
        # # The list of app slugs with push access.
        # apps: []
      # Requires all conversations on code to be resolved before a pull request can be merged into a branch that matches this rule. Set to `false` to disable.
      required_conversation_resolution: true
      # Commits pushed to matching branches must have verified signatures. Set to `false` to disable.
      required_signatures: true
      # Enforces a linear commit Git history, which prevents anyone from pushing merge commits to a branch.
      # Your repository must allow squash merging or rebase merging before you can enable a linear commit history.
      required_linear_history: false
      # Required. Enforce all configured restrictions for administrators. Set to true to enforce required status checks for repository administrators. Set to `null` to disable.
      enforce_admins: false
      # Permits force pushes to the protected branch by anyone with write access to the repository. Set to `true` to allow force pushes. Set to `false` or `null` to block force pushes.
      # allow_force_pushes: false
      # Allows deletion of the protected branch by anyone with write access to the repository. Set to `false` to prevent deletion of the protected branch.
      # allow_deletions: false

# https://docs.github.com/en/rest/reference/issues#create-a-label
labels:
  # - # Required. The name of the label. Emoji can be added to label names, using either native emoji or colon-style markup. For example, typing `:strawberry:` will render the emoji üçì.
  #   # For a full list of available emoji and codes, see "[Emoji cheat sheet](https://github.com/ikatyang/emoji-cheat-sheet)".
  #   name: bug
  #   # The [hexadecimal color code](http://www.color-hex.com) for the label, without the leading `#`.
  #   color: "#cc0000"
  #   # A short description of the label. Must be 100 characters or fewer.
  #   description: An issue with the system üêõ.

  # github; https://docs.github.com/en/issues/using-labels-and-milestones-to-track-work/managing-labels#about-default-labels
  - name: bug
    color: "#d73a4a"
    description: Something isn't working
  - name: documentation
    color: "#0075ca"
    description: Improvements or additions to documentation
  - name: duplicate
    color: "#cfd3d7"
    description: This issue or pull request already exists
  - name: enhancement
    color: "#a2eeef"
    description: New feature or request
  - name: good first issue
    color: "#7057ff"
    description: Good for newcomers
  - name: help wanted
    color: "#008672"
    description: Extra attention is needed
  - name: invalid
    color: "#e4e669"
    description: This doesn't seem right
  - name: question
    color: "#d876e3"
    description: Further information is requested
  - name: wontfix
    color: "#ffffff"
    description: This will not be worked on

  # auto release; https://intuit.github.io/auto/docs/configuration/autorc#labels
  - name: major
    color: "#d20b09"
    description: Pull requests that auto release should increment major version when merged
  - name: minor
    color: "#f5b40b"
    description: Pull requests that auto release should increment minor version when merged
  - name: patch
    color: "#9b055a"
    description: Pull requests that auto release should increment patch version when merged
  - name: skip-release
    color: "#bf5416"
    description: Pull requests that auto release should skip release when merged
  - name: release
    color: "#bf5416"
    description: Pull requests that auto release should create release when merged
  - name: internal
    color: "#696969"
    description: Changes that only affect internal api
  - name: documentation
    color: "#0075ca"
    description: Changes that only affect documentation
  - name: tests
    color: "#696969"
    description: Changes that only affect tests
  - name: dependencies
    color: "#20409a"
    description: Changes that only affect dependencies
  - name: performance
    color: "#696969"
    description: Changes that only affect performance

# https://docs.github.com/en/rest/reference/issues#create-a-milestone
milestones:
  # - # Required. The title of the milestone.
  #   title: title of milestone
  #   # A description of the milestone.
  #   description: description of milestone
  #   # The state of the milestone. Either `open` or `closed`.
  #   state: open
  #   # The milestone due date. This is a timestamp in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format: `YYYY-MM-DDTHH:MM:SSZ`.
  #   due_on: 2001-01-01T00:00:00Z

# https://docs.github.com/en/rest/reference/repos#add-a-repository-collaborator
collaborators:
  # - username: bkeepers
  #   # The permission to grant the collaborator. Only valid on organization-owned repositories. Can be one of:
  #   # * `pull` - can pull, but not push to or administer this repository.
  #   # * `push` - can pull and push, but not administer this repository.
  #   # * `admin` - can pull, push and administer this repository.
  #   # * `maintain` - Recommended for project managers who need to manage the repository without access to sensitive or destructive actions.
  #   # * `triage` - Recommended for contributors who need to proactively manage issues and pull requests without write access.
  #   permission: push
  # - username: hubot
  #   permission: pull

# https://docs.github.com/en/rest/reference/teams#add-or-update-team-repository-permissions
teams:
  # - name: core
  #   # The permission to grant the team on this repository. Can be one of:
  #   # * `pull` - team members can pull, but not push to or administer this repository.
  #   # * `push` - team members can pull and push, but not administer this repository.
  #   # * `admin` - team members can pull, push and administer this repository.
  #   # * `maintain` - team members can manage the repository without access to sensitive or destructive actions. Recommended for project managers. Only applies to repositories owned by organizations.
  #   # * `triage` - team members can proactively manage issues and pull requests without write access. Recommended for contributors who triage a repository. Only applies to repositories owned by organizations.
  #   # If no permission is specified, the team's `permission` attribute will be used to determine what permission to grant the team on this repository.
  #   permission: admin
  # - name: docs
  #   permission: push
